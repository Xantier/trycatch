buildscript {
    repositories {
        jcenter()
        maven { url "http://jcenter.bintray.com" }
    }

    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.4.0",
                "com.github.jengelman.gradle.plugins:shadow:1.2.3",
                "org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.3"
    }
}
if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException("Must be built with Java 8 or higher")
}

apply plugin: "io.ratpack.ratpack-java"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "kotlin"
apply plugin: "idea"

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "conf";
            exclude "**/node_modules/**"

        }
    }
}

repositories {
    jcenter()
    maven { url "http://jcenter.bintray.com" }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "http://repository.jetbrains.com/all" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:1.0.+",
            ratpack.dependency("guice"),
            ratpack.dependency("rx"),
            ratpack.dependency("hikari"),
            'com.squareup.retrofit2:retrofit:2.1.0',
            'com.squareup.retrofit2:adapter-rxjava:2.1.0',
            'com.squareup.retrofit2:converter-scalars:2.1.0',
            "com.fasterxml.jackson.module:jackson-module-kotlin:2.7.5",
            'io.reactivex:rxkotlin:0.60.0',
            'com.github.kittinunf.fuel:fuel:1.3.1',
            'com.github.kittinunf.fuel:fuel-rxjava:1.3.1',

            // TODO: Unused? Maybe for DB based settings
            'org.jetbrains.exposed:exposed:0.5.0',

            'org.funktionale:funktionale:0.9',
            'org.skyscreamer:jsonassert:1.3.0',
            'org.postgresql:postgresql:9.4.1209',
            'com.h2database:h2:1.4.192',
            'com.github.seratch:kotliquery:1.1.1'


    runtime 'org.apache.logging.log4j:log4j-slf4j-impl:2.6.1',
            'org.apache.logging.log4j:log4j-api:2.6.1',
            'org.apache.logging.log4j:log4j-core:2.6.1',
            'com.lmax:disruptor:3.3.4'

    testCompile "junit:junit:4.+",
            'org.jetbrains.spek:spek:1.0.+',
            "org.jetbrains.kotlin:kotlin-test:1.0.+"
}

idea {
    project {
        jdkName "1.8"
        languageLevel "JDK_1_8"
        vcs = "Git"
        ipr {
            withXml {
                def node = it.asNode()
                def parser = new XmlParser()
                node.append(parser.parse(file("${rootDir}/gradle/idea/codeStyleSettings.xml")))
                node.append(parser.parse(file("${rootDir}/gradle/idea/gradleSettings.xml")))
            }
        }
    }
}

run {
    if (project.hasProperty("cli")) {
        args "cli"
    }
}

mainClassName = "com.hallila.trycatch.Main"
